{"version":3,"sources":["constants/styles.js","components/Buttons.js","components/ErrorOverlay.js","util/date.js","components/Input.js","components/ExpenseForm.js","components/IconButton.js","components/LoadingOverlay.js","store/expense-context.js","util/http.js","screens/ManageExpenses.js","components/ExpenseItem.js","components/ExpensesList.js","components/ExpensesSummary.js","components/ExpensesOutput.js","screens/RecentExpenses.js","screens/AllExpenses.js","App.js"],"names":["GlobalStyles","primary50","primary100","primary200","primary400","primary500","primary700","primary800","accent500","error50","error500","gray500","gray700","Buttons","children","onPress","mode","style","View","Pressable","pressed","styles","button","flat","Text","buttonText","flatText","StyleSheet","create","borderRadius","padding","backgroundColor","color","textAlign","opacity","ErrorOverlay","message","onConfirm","container","text","title","Button","flex","justifyContent","alignItems","marginBottom","fontSize","fontWeight","getFormattedDate","date","toISOString","slice","Input","label","textInputConfig","invalid","inputStyles","input","multiline","push","inputMultiline","invalidInput","inputContainer","invalidLabel","TextInput","marginHorizontal","marginVertical","minHeight","textAlignVertical","ExpenseForm","onCancel","onSubmit","submitButtonLabel","defaultValues","useState","amount","value","toString","isValid","description","inputs","setInputs","inputChangedHandler","inputIdentifier","enteredValue","curInputs","formIsInvalid","form","inputsRow","rowInput","keyboardType","onChangeText","bind","placeholder","maxLength","errorText","buttons","expenseData","Date","amountIsValid","isNaN","dateIsValid","descriptionIsValid","trim","length","marginTop","flexDirection","margin","minWidth","IconButton","icon","size","buttonContainer","Ionicons","name","LoadingOverlay","ActivityIndicator","ExpensesContext","createContext","expenses","addExpense","setExpenses","deleteExpense","id","updateExpense","expensesReducer","state","action","type","payload","reverse","updatableExpenseIndex","findIndex","expense","updatedItem","data","updatedExpenses","filter","ExpensesContextProvider","useReducer","expensesState","dispatch","Provider","url","storeExpense","a","async","axios","post","response","fetchExpenses","get","key","expenseObj","put","ManageExpenses","route","navigation","isSubmitting","setisSubmitting","error","seterror","expenseCtx","useContext","edited","params","expenseId","isEditing","selectedExpense","find","useLayoutEffect","setOptions","goBack","delete","ur","paddingTop","borderTopWidth","borderTopColor","ExpenseItem","useNavigation","navigate","item","textBase","amountContainer","toFixed","shadowColor","shadowRadius","shadowOffset","width","height","shadowOpacity","paddingHorizontal","paddingVertical","renderItem","ExpensesList","FlatList","keyExtractor","ExpensesSummary","periodName","expenseSum","reduce","sum","period","ExpensesOutput","expensesPeriod","fallback","content","infoText","RecentExpenses","isFetching","setisFetching","expensesCtx","useEffect","getExpenses","recentExpenses","days","today","date7Days","getFullYear","getMonth","getDate","AllExpenses","stack","createNativeStackNavigator","bottom","createBottomTabNavigator","ExpensesOverview","Navigator","screenOptions","headerStyle","headerTintColor","tabBarStyle","tabBarActiveTintColor","headerRight","tintColor","Screen","component","options","tabBarLabel","tabBarIcon","App","StatusBar","NavigationContainer","headerShown","presentation"],"mappings":"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","file":"static/js/app.76b8fb83.chunk.js","sourcesContent":["export const GlobalStyles={\r\n    colors:{\r\n        primary50: '#e4d9fd',\r\n    primary100: '#c6affc',\r\n    primary200: '#a281f0',\r\n    primary400: '#5721d4',\r\n    primary500: '#3e04c3',\r\n    primary700: '#2d0689',\r\n    primary800: '#200364',\r\n    accent500: '#f7bc0c',\r\n    error50: '#fcc4e4',\r\n    error500: '#9b095c',\r\n    gray500: '#39324a',\r\n    gray700: '#221c30',\r\n    }\r\n}","\r\nimport { Pressable, StyleSheet, View,Text } from \"react-native\"\r\nimport { GlobalStyles } from \"../constants/styles\"\r\n\r\n\r\nconst Buttons = ({children,onPress,mode,style}) => {\r\n  return (\r\n    <View style={style}>\r\n        <Pressable onPress={onPress} style={({pressed})=> pressed && styles.pressed}>\r\n            <View style={[styles.button,mode==='flat' && styles.flat]}>\r\n                <Text style={[styles.buttonText,mode==='flat' && styles.flatText]}>{children}</Text>\r\n            </View>\r\n        </Pressable>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Buttons\r\nconst styles=StyleSheet.create({\r\n    button:{\r\n        borderRadius:4,\r\n        padding:8,\r\n        backgroundColor:GlobalStyles.colors.primary500\r\n    },\r\n    flat:{\r\n        backgroundColor:'transparent'\r\n    },\r\n    buttonText:{\r\n        color:'white',\r\n        textAlign:'center'\r\n    },\r\n    flatText:{\r\n        color:GlobalStyles.colors.primary200\r\n    },\r\n    pressed:{\r\n        opacity:0.75,\r\n        backgroundColor:GlobalStyles.colors.primary100,\r\n        borderRadius:4\r\n    }\r\n})","\r\nimport { View,ActivityIndicator,StyleSheet, Text, Button } from \"react-native\"\r\nimport { GlobalStyles } from \"../constants/styles\"\r\n\r\n\r\nconst ErrorOverlay = ({message,onConfirm}) => {\r\n  return (\r\n    <View style={styles.container}>\r\n        <Text style={[styles.text,styles.title]}>An error occure!</Text>\r\n        <Text style={styles.text}>{message}</Text>\r\n        <Button onPress={onConfirm}>Okay</Button>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default ErrorOverlay\r\n\r\nconst styles=StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        justifyContent:'center',\r\n        alignItems:\"center\",\r\n        padding:24,\r\n        backgroundColor:GlobalStyles.colors.primary700\r\n    },\r\n    text:{\r\n        textAlign:'center',\r\n        marginBottom:8\r\n    },\r\n    title:{\r\n        fontSize:20,\r\n        fontWeight:'bold'\r\n    },\r\n    message:{\r\n        fontSize:14\r\n    }\r\n})","export function getFormattedDate(date){\r\n    return date.toISOString().slice(0, 10);\r\n}\r\n\r\nexport function getDateMinusDays(date,days){\r\n    return new Date(date.getFullYear(),date.getMonth(),date.getDate()-days);\r\n}","import { Text, TextInput ,View,StyleSheet} from \"react-native\"\r\nimport { GlobalStyles } from \"../constants/styles\"\r\n\r\n\r\nconst Input = ({label,textInputConfig,style,invalid}) => {\r\n\r\n    let inputStyles=[styles.input]\r\n    if(textInputConfig && textInputConfig.multiline){\r\n        inputStyles.push(styles.inputMultiline)\r\n    }\r\n\r\n    if(invalid){\r\n        inputStyles.push(styles.invalidInput)\r\n    }\r\n  return (\r\n    <View style={[styles.inputContainer,style]}>\r\n        <Text style={[styles.label,invalid && styles.invalidLabel]}>{label}</Text>\r\n        <TextInput style={inputStyles} {...textInputConfig}/>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Input\r\n\r\nconst styles = StyleSheet.create({\r\n    inputContainer: {\r\n      marginHorizontal: 4,\r\n      marginVertical: 8\r\n    },\r\n    label: {\r\n      fontSize: 12,\r\n      color: GlobalStyles.colors.primary100,\r\n      marginBottom: 4,\r\n    },\r\n    input: {\r\n      backgroundColor: GlobalStyles.colors.primary100,\r\n      color: GlobalStyles.colors.primary700,\r\n      padding: 6,\r\n      borderRadius: 6,\r\n      fontSize: 18,\r\n    },\r\n    inputMultiline: {\r\n      minHeight: 100,\r\n      textAlignVertical: 'top'\r\n    },\r\n    invalidLabel: {\r\n      color: GlobalStyles.colors.error500\r\n    },\r\n    invalidInput: {\r\n      backgroundColor: GlobalStyles.colors.error50\r\n    }\r\n  });","import { useState } from \"react\"\r\nimport { StyleSheet, View,Text } from \"react-native\"\r\nimport { GlobalStyles } from \"../constants/styles\"\r\nimport { getFormattedDate } from \"../util/date\"\r\nimport Input from \"./Input\"\r\nimport Buttons from \"./Buttons\"\r\n\r\n\r\n\r\nconst ExpenseForm = ({onCancel,onSubmit,submitButtonLabel,defaultValues}) => {\r\n   const [amountValue,setAmountValue]= useState('');\r\n   const [inputs, setInputs] = useState({\r\n    amount: {\r\n        value: defaultValues ? defaultValues.amount.toString() : '',\r\n        isValid: true,\r\n      },\r\n      date: {\r\n        value: defaultValues ? getFormattedDate(defaultValues.date) : '',\r\n        isValid: true,\r\n      },\r\n      description: {\r\n        value: defaultValues ? defaultValues.description : '',\r\n        isValid: true,\r\n      },\r\n  });\r\n\r\n   \r\n\r\n    function inputChangedHandler(inputIdentifier, enteredValue) {\r\n        setInputs((curInputs) => {\r\n          return {\r\n            ...curInputs,\r\n            [inputIdentifier]: { value: enteredValue, isValid: true },\r\n          };\r\n        });\r\n      }\r\n\r\n      function submitHandler() {\r\n        const expenseData = {\r\n          amount: +inputs.amount.value,\r\n          date: new Date(inputs.date.value),\r\n          description: inputs.description.value,\r\n        };\r\n\r\n        const amountIsValid = !isNaN(expenseData.amount) && expenseData.amount > 0;\r\n        const dateIsValid = expenseData.date.toString() !== 'Invalid Date';\r\n        const descriptionIsValid = expenseData.description.trim().length > 0;\r\n        if (!amountIsValid || !dateIsValid || !descriptionIsValid) {\r\n            setInputs((curInputs) => {\r\n                return {\r\n                  amount: { value: curInputs.amount.value, isValid: amountIsValid },\r\n                  date: { value: curInputs.date.value, isValid: dateIsValid },\r\n                  description: {\r\n                    value: curInputs.description.value,\r\n                    isValid: descriptionIsValid,\r\n                  },\r\n                };\r\n              });\r\n              return;\r\n        }\r\n        onSubmit(expenseData)\r\n\r\n    }\r\n\r\n    const formIsInvalid =\r\n    !inputs.amount.isValid ||\r\n    !inputs.date.isValid ||\r\n    !inputs.description.isValid;\r\n\r\n  return (\r\n    <View style={styles.form} >\r\n        <Text style={styles.title}>Your Expense</Text>\r\n        <View style={styles.inputsRow}>\r\n        <Input style={styles.rowInput}\r\n          label=\"Amount\"\r\n          invalid={!inputs.amount.isValid}\r\n          textInputConfig={{\r\n            keyboardType: 'decimal-pad',\r\n            // onChangeText:amountChangeHandler,\r\n            onChangeText: inputChangedHandler.bind(this, 'amount'),\r\n            value: inputs.amount.value,\r\n            // value:amountValue\r\n          }}/>\r\n        <Input style={styles.rowInput}\r\n          label=\"Date\"\r\n          invalid={!inputs.date.isValid}\r\n          textInputConfig={{\r\n            placeholder: 'YYYY-MM-DD',\r\n            maxLength: 10,\r\n            onChangeText: inputChangedHandler.bind(this, 'date'),\r\n            value: inputs.date.value,\r\n          }}/>\r\n          </View>\r\n          <Input\r\n        label=\"Description\"\r\n        invalid={!inputs.description.isValid}\r\n        textInputConfig={{\r\n          multiline: true,\r\n          // autoCapitalize: 'none'\r\n          // autoCorrect: false // default is true\r\n          onChangeText: inputChangedHandler.bind(this, 'description'),\r\n          value: inputs.description.value,\r\n        }}\r\n      />\r\n      {!formIsInvalid && <Text style={styles.errorText}>Invalid input values - please check your entered data!</Text>}\r\n      <View style={styles.buttons}>\r\n        <Buttons style={styles.button} mode=\"flat\" onPress={onCancel}>\r\n          Cancel\r\n        </Buttons>\r\n        <Buttons style={styles.button} onPress={submitHandler}>\r\n          {submitButtonLabel}\r\n        </Buttons>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default ExpenseForm\r\n\r\nconst styles = StyleSheet.create({\r\n    form: {\r\n      marginTop: 40,\r\n    },\r\n    title: {\r\n      fontSize: 24,\r\n      fontWeight: 'bold',\r\n      color: 'white',\r\n      marginVertical: 24,\r\n      textAlign: 'center',\r\n    },\r\n    inputsRow: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n    },\r\n    rowInput: {\r\n      flex: 1,\r\n    },\r\n    errorText: {\r\n      textAlign: 'center',\r\n      color: GlobalStyles.colors.error500,\r\n      margin: 8,\r\n    },\r\n    buttons: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    button: {\r\n      minWidth: 120,\r\n      marginHorizontal: 8,\r\n    },\r\n  })","import { Pressable, StyleSheet, View } from \"react-native\"\r\nimport {Ionicons} from '@expo/vector-icons'\r\n\r\nconst IconButton = ({icon,color,size,onPress}) => {\r\n  return (\r\n    <Pressable onPress={onPress} style={({pressed})=>pressed && styles.pressed}>\r\n        <View style={styles.buttonContainer}>\r\n            <Ionicons name={icon} color={color} size={size}/>\r\n        </View>\r\n    </Pressable>\r\n  )\r\n}\r\n\r\nexport default IconButton\r\n\r\nconst styles=StyleSheet.create({\r\n    buttonContainer:{\r\n        borderRadius:24,\r\n        padding:6,\r\n        marginHorizontal:8,marginVertical:2\r\n    },\r\n    pressed:{\r\n        opacity:0.75\r\n    }\r\n})","\r\nimport { View,ActivityIndicator,StyleSheet } from \"react-native\"\r\nimport { GlobalStyles } from \"../constants/styles\"\r\n\r\n\r\nconst LoadingOverlay = () => {\r\n  return (\r\n    <View style={styles.container}>\r\n        <ActivityIndicator size=\"large\" color=\"white\"/>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default LoadingOverlay\r\n\r\nconst styles=StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        justifyContent:'center',\r\n        alignItems:\"center\",\r\n        padding:24,\r\n        backgroundColor:GlobalStyles.colors.primary700\r\n    }\r\n})","import { createContext, useReducer } from 'react';\r\n\r\n\r\n\r\nexport const ExpensesContext = createContext({\r\n  expenses: [],\r\n  addExpense: ({ description, amount, date }) => {},\r\n  setExpenses:(expenses)=>{},\r\n  deleteExpense: (id) => {},\r\n  updateExpense: (id, { description, amount, date }) => {},\r\n});\r\n\r\nfunction expensesReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'ADD':\r\n      \r\n      return [action.payload, ...state];\r\n    case 'SET':\r\n      const inverted=action.payload.reverse();\r\n      return inverted\r\n    case 'UPDATE':\r\n      const updatableExpenseIndex = state.findIndex(\r\n        (expense) => expense.id === action.payload.id\r\n      );\r\n      const updatableExpense = state[updatableExpenseIndex];\r\n      const updatedItem = { ...updatableExpense, ...action.payload.data };\r\n      const updatedExpenses = [...state];\r\n      updatedExpenses[updatableExpenseIndex] = updatedItem;\r\n      return updatedExpenses;\r\n    case 'DELETE':\r\n      return state.filter((expense) => expense.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction ExpensesContextProvider({ children }) {\r\n  const [expensesState, dispatch] = useReducer(expensesReducer, []);\r\n\r\n  function addExpense(expenseData) {\r\n    dispatch({ type: 'ADD', payload: expenseData });\r\n  }\r\n\r\n  function setExpenses(expenses){\r\n    dispatch({type:'SET',payload:expenses})\r\n  }\r\n\r\n  function deleteExpense(id) {\r\n    dispatch({ type: 'DELETE', payload: id });\r\n  }\r\n\r\n  function updateExpense(id, expenseData) {\r\n    dispatch({ type: 'UPDATE', payload: { id: id, data: expenseData } });\r\n  }\r\n\r\n  const value = {\r\n    expenses: expensesState,\r\n    setExpenses:setExpenses,\r\n    addExpense: addExpense,\r\n    deleteExpense: deleteExpense,\r\n    updateExpense: updateExpense,\r\n  };\r\n\r\n  return (\r\n    <ExpensesContext.Provider value={value}>\r\n      {children}\r\n    </ExpensesContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ExpensesContextProvider;","import axios from \"axios\";\r\nconst url='https://react-native-course-2addc-default-rtdb.firebaseio.com'\r\nexport async function storeExpense(expenseData){\r\n    const response=await axios.post(url+'/expenses.json',\r\n    expenseData)\r\n\r\n    const id=response.data.name\r\n    return id;\r\n}\r\n\r\nexport async function fetchExpenses(){\r\n   const response=await axios.get(url+'/expenses.json');\r\n\r\n   const expenses=[];\r\n   for(const key in response.data){\r\n    const expenseObj={\r\n        id:key,\r\n        amount:response.data[key].amount,\r\n        date:new Date(response.data[key].date),\r\n        description:response.data[key].description\r\n    };\r\n\r\n    expenses.push(expenseObj)\r\n   }\r\n\r\n   return expenses\r\n}\r\n\r\nexport function updateExpense(id,expenseData){\r\n    return axios.put(url+`/expenses/${id}.json`,expenseData);\r\n\r\n}\r\n\r\nexport function deleteExpense(id){\r\n    return axios.delete(ur+`/expenses/${id}.json`)\r\n}","\r\nimport { useContext, useLayoutEffect, useState } from \"react\";\r\nimport { Button, StyleSheet, Text, View } from \"react-native\"\r\nimport Buttons from \"../components/Buttons\";\r\nimport ErrorOverlay from \"../components/ErrorOverlay\";\r\nimport ExpenseForm from \"../components/ExpenseForm\";\r\nimport IconButton from \"../components/IconButton\";\r\nimport LoadingOverlay from \"../components/LoadingOverlay\";\r\nimport { GlobalStyles } from \"../constants/styles\";\r\nimport { ExpensesContext } from \"../store/expense-context\";\r\nimport { deleteExpense, storeExpense, updateExpense } from \"../util/http\";\r\n\r\nconst ManageExpenses = ({route,navigation}) => {\r\n   const [isSubmitting,setisSubmitting]= useState(false)\r\n   const [error, seterror] = useState()\r\n    const expenseCtx=useContext(ExpensesContext);\r\n    const edited=route.params?.expenseId;\r\n\r\n    const isEditing=!!edited;\r\n\r\n    const selectedExpense=expenseCtx.expenses.find(expense=>expense.id===edited)\r\n\r\n    useLayoutEffect(()=>{\r\n        navigation.setOptions({\r\n            title:isEditing?'Edit Expense':'Add Expense'\r\n        })\r\n    },[navigation,isEditing])\r\n    \r\n    async function deleteExpenseHandler(){\r\n        setisSubmitting(true);\r\n        try {\r\n            \r\n            await deleteExpense(edited);\r\n            expenseCtx.deleteExpense(edited)\r\n            navigation.goBack();\r\n        } catch (error) {\r\n            seterror('Could not delete expense -try again')\r\n            setisSubmitting(false)\r\n        }\r\n    }\r\n    function cancelHandler(){\r\n        navigation.goBack();\r\n    }\r\n    async function confirmHandler(expenseData){\r\n        setisSubmitting(true);\r\n        if(isEditing){\r\n            expenseCtx.updateExpense(edited,expenseData);\r\n            await updateExpense(edited,expenseData);\r\n        }\r\n        else{\r\n           const id=await storeExpense(expenseData);\r\n            expenseCtx.addExpense({...expenseData,id:id});\r\n        }\r\n        navigation.goBack();\r\n\r\n    }\r\n\r\n    function errorHandler(){\r\n        seterror(null)\r\n      }\r\n\r\n    if(error && !isSubmitting){\r\n        return <ErrorOverlay message={error} onConfirm={errorHandler}/>\r\n    }\r\n\r\n    if(isSubmitting){\r\n        return <LoadingOverlay/>\r\n    }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n        <ExpenseForm onSubmit={confirmHandler} submitButtonLabel={isEditing?'Update':'Add'} onCancel={cancelHandler} defaultValues={selectedExpense}/>\r\n        <View style={styles.delete}>\r\n        {isEditing && <IconButton icon='trash' color={GlobalStyles.colors.error500} \r\n        size={36} onPress={deleteExpenseHandler}/>}\r\n        </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default ManageExpenses\r\n\r\nconst styles=StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        padding:24,\r\n        backgroundColor:GlobalStyles.colors.primary800\r\n    },\r\n    buttons:{\r\n        flexDirection:\"row\",\r\n        justifyContent:'center',\r\n        alignItems:'center'\r\n    },\r\n    button:{\r\n        minWidth:120,\r\n        marginHorizontal:8\r\n    },\r\n    delete:{\r\n        marginTop:16,\r\n        paddingTop:18,\r\n        borderTopWidth:2,\r\n        borderTopColor:GlobalStyles.colors.primary200,\r\n        alignItems:'center'\r\n    }\r\n})","import { Pressable, StyleSheet, Text, View } from \"react-native\"\r\nimport { GlobalStyles } from \"../constants/styles\"\r\nimport { getFormattedDate } from \"../util/date\"\r\nimport {useNavigation} from '@react-navigation/native'\r\n\r\n\r\nconst ExpenseItem = ({description,amount,date,id}) => {\r\n    const navigation=useNavigation();\r\n    function expensePressHandler(){\r\n        navigation.navigate('Manage',{\r\n            expenseId:id\r\n        })\r\n\r\n    }\r\n  return (\r\n    <Pressable onPress={expensePressHandler} style={({pressed})=>pressed && styles.pressed}>\r\n        <View style={styles.item}>\r\n            <View>\r\n            <Text style={[styles.description,styles.textBase]}>{description}</Text>\r\n            <Text style={[styles.textBase]}>{getFormattedDate(date)}</Text>\r\n            </View>\r\n            <View style={styles.amountContainer}>\r\n            <Text style={styles.amount}>{amount.toFixed(2)}</Text>\r\n            </View>\r\n        </View>\r\n    </Pressable>\r\n  )\r\n}\r\n\r\nexport default ExpenseItem\r\n\r\nconst styles=StyleSheet.create({\r\n    pressed:{\r\n        opacity:0.75\r\n    },\r\n    item:{\r\n        padding:12,\r\n        marginVertical:8,\r\n        backgroundColor:GlobalStyles.colors.primary500,\r\n        flexDirection:'row',\r\n        justifyContent:'space-between',\r\n        borderRadius:6,\r\n        shadowColor:GlobalStyles.colors.gray500,\r\n        shadowRadius:4,\r\n        shadowOffset:{width:1,height:1},\r\n        shadowOpacity:0.4\r\n    },\r\n    textBase:{\r\n        color:GlobalStyles.colors.primary50,\r\n\r\n    },\r\n    description:{\r\n        fontSize:16,\r\n        marginBottom:4,\r\n        fontWeight:'bold',\r\n\r\n    },\r\n    amountContainer:{\r\n        paddingHorizontal:12,\r\n        paddingVertical:4,\r\n        backgroundColor:'white',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        borderRadius:4,\r\n        minWidth:80\r\n    },\r\n    amount:{\r\n        color:GlobalStyles.colors.primary500,\r\n        fontWeight:'bold'\r\n    }\r\n})","import { FlatList, Text } from \"react-native\"\r\nimport ExpenseItem from \"./ExpenseItem\"\r\n\r\nfunction renderItem(item){\r\n    return <ExpenseItem {...item.item}/>\r\n}\r\nconst ExpensesList = ({expenses}) => {\r\n  return (\r\n    <FlatList data={expenses} renderItem={renderItem} keyExtractor={(item)=>item.id}/>\r\n  )\r\n}\r\n\r\nexport default ExpensesList","import { StyleSheet, Text,View } from \"react-native\"\r\nimport { GlobalStyles } from \"../constants/styles\"\r\n\r\nconst ExpensesSummary = ({periodName,expenses}) => {\r\n\r\n    const expenseSum=expenses.reduce((sum,expense)=>{\r\n        return sum+expense.amount\r\n    },0)\r\n  return (\r\n    <View style={styles.container}>\r\n    <Text style={styles.period}>{periodName}</Text>\r\n    <Text style={styles.sum}>${expenseSum.toFixed(2)}</Text>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default ExpensesSummary\r\n\r\nconst styles=StyleSheet.create({\r\n    container:{\r\n        padding:8,\r\n        backgroundColor:GlobalStyles.colors.primary50,\r\n        borderRadius:6,\r\n        flexDirection:'row',\r\n        justifyContent:'space-between',\r\n\r\n    },\r\n    period:{\r\n        fontSize:12,\r\n        color:GlobalStyles.colors.primary100,\r\n    },\r\n    sum:{\r\n        fontSize:16,\r\n        fontWeight:'bold',\r\n        color:GlobalStyles.colors.primary500\r\n    }\r\n})","import { FlatList, StyleSheet, Text, View } from \"react-native\"\r\nimport { GlobalStyles } from \"../constants/styles\"\r\nimport ExpensesList from \"./ExpensesList\"\r\nimport ExpensesSummary from \"./ExpensesSummary\"\r\n\r\n\r\n\r\nconst ExpensesOutput = ({expenses,expensesPeriod,fallback}) => {\r\n\r\n    let content=<Text  style={styles.infoText}>{fallback}</Text>\r\n\r\n    if(expenses.length>0){\r\n        content=<ExpensesList expenses={expenses}/>\r\n    }\r\n  return (\r\n    <View style={styles.container}>\r\n        <ExpensesSummary expenses={expenses} periodName={expensesPeriod}/>\r\n        {content}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default ExpensesOutput\r\n\r\nconst styles=StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        padding:24,\r\n        backgroundColor:GlobalStyles.colors.primary700,\r\n    },\r\n    infoText:{\r\n        color:'white',\r\n        fontSize:16,\r\n        textAlign:'center',\r\n        marginTop:32\r\n    }\r\n})","\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { Text } from 'react-native'\r\nimport ErrorOverlay from '../components/ErrorOverlay'\r\nimport ExpensesOutput from \"../components/ExpensesOutput\"\r\nimport LoadingOverlay from '../components/LoadingOverlay'\r\nimport { ExpensesContext } from '../store/expense-context'\r\n\r\nimport { getDateMinusDays } from '../util/date'\r\nimport { fetchExpenses } from '../util/http'\r\n\r\n\r\nconst RecentExpenses = () => {\r\n  const [isFetching, setisFetching] = useState(true)\r\n  const [error, seterror] = useState()\r\n  const expensesCtx=useContext(ExpensesContext)\r\n  useEffect(()=>{\r\n    async function getExpenses(){\r\n      setisFetching(true);\r\n      try{\r\n\r\n        const expenses=await fetchExpenses();\r\n        expensesCtx.setExpenses(expenses)\r\n      }\r\n      catch(error){\r\n        seterror('Could not fetch expenses!');\r\n      }\r\n      setisFetching(false)\r\n      \r\n    }\r\n\r\n    getExpenses();\r\n  },[])\r\n\r\n  function errorHandler(){\r\n    seterror(null)\r\n  }\r\n\r\n  if(error && !isFetching){\r\n    return <ErrorOverlay message={error} onConfirm={errorHandler}/>\r\n  }\r\n\r\n  if(isFetching){\r\n    return <LoadingOverlay/>\r\n  }\r\n\r\n  const recentExpenses=expensesCtx.expenses.filter((expense)=>{\r\n    const today=new Date();\r\n    const date7Days=getDateMinusDays(today,7);\r\n\r\n    return expense.date>date7Days;\r\n  })\r\n\r\n\r\n  return (\r\n    <ExpensesOutput expenses={recentExpenses} expensesPeriod=\"Last 7 days\" fallback='No expenses registered'/>\r\n    \r\n  )\r\n}\r\n\r\nexport default RecentExpenses","import { useContext } from \"react\"\r\nimport { Text } from \"react-native\"\r\nimport ExpensesOutput from \"../components/ExpensesOutput\"\r\nimport { ExpensesContext } from \"../store/expense-context\"\r\n\r\n\r\n\r\nconst AllExpenses = () => {\r\n  const expensesCtx= useContext(ExpensesContext)\r\n  return (\r\n    <ExpensesOutput expenses={expensesCtx.expenses} expensesPeriod=\"Last 7 days\" fallback='No expenses registered'/>\r\n  )\r\n}\r\n\r\nexport default AllExpenses","import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native'\nimport {createNativeStackNavigator} from '@react-navigation/native-stack'\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs'\nimport ManageExpenses from './screens/ManageExpenses';\nimport RecentExpenses from './screens/RecentExpenses';\nimport AllExpenses from './screens/AllExpenses';\nimport { GlobalStyles } from './constants/styles';\nimport {Ionicons} from '@expo/vector-icons'\nimport IconButton from './components/IconButton';\nimport ExpensesContextProvider from './store/expense-context';\n\nconst stack=createNativeStackNavigator();\nconst bottom=createBottomTabNavigator();\n\nfunction ExpensesOverview(){\n  return <bottom.Navigator screenOptions={({navigation})=>({\n    headerStyle:{backgroundColor:GlobalStyles.colors.primary500},\n    headerTintColor:'white',\n    tabBarStyle:{backgroundColor:GlobalStyles.colors.primary500},\n    tabBarActiveTintColor:GlobalStyles.colors.accent500,\n    headerRight:({tintColor})=>(<IconButton icon=\"add\" size={24} \n    color={tintColor} onPress={()=>{\n      navigation.navigate('Manage')\n    }}/>),\n\n  })}>\n    <bottom.Screen name='Recent' component={RecentExpenses} options={{\n      title:'Recent Expenses',\n      tabBarLabel:'Recent',\n      tabBarIcon:({color,size})=>\n        <Ionicons name='hourglass' size={size} color={color}/>\n      \n    }}/>\n    <bottom.Screen name='All' component={AllExpenses} options={{\n      title:'All Expenses',\n      tabBarLabel:'All',\n      tabBarIcon:({color,size})=>\n        <Ionicons name='calendar' size={size} color={color}/>\n      \n    }}/>\n  </bottom.Navigator>\n}\n\nexport default function App() {\n  return (\n    <>\n      <StatusBar style=\"auto\" />\n      <ExpensesContextProvider>\n      <NavigationContainer>\n        <stack.Navigator screenOptions={{\n          headerStyle:{backgroundColor:GlobalStyles.colors.primary500},\n          headerTintColor:'white'\n        }}>\n          <stack.Screen name='ExpensesOverview' component={ExpensesOverview} options={{\n            headerShown:false\n          }}/>\n          <stack.Screen name='Manage' component={ManageExpenses} options={{\n            presentation:'modal'\n          }}/>\n        </stack.Navigator>\n      </NavigationContainer>\n      </ExpensesContextProvider>\n    </>\n  );\n}\n\n\n"],"sourceRoot":""}